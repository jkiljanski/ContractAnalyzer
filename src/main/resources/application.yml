server:
  error:
    whitelabel:
      enabled: true
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_trace_param
    include-exception: false
  port: 8080

spring:
  data:
    mongodb:
#      uri: "mongodb+srv://m001-student:Orixa1911@sandbox.opih2.mongodb.net/myFirstDatabase?retryWrites=true&w=majority"
#      uri: "mongodb://root:root@localhost:8085/"
      uri: "mongodb://root:root@db:27017/"
      database: reporting
  rabbitmq:
    host: rabbit
    port: 5672



kafka:
    app-name: contract-analyzer
    bootstrap-servers: kafka:29092
    produc:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consum:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    streams:
      key-serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      value-serde: org.apache.kafka.common.serialization.Serdes$StringSerde







keycloak:
  auth-server-url: http://keycloak:8090/auth
  #  auth-server-url: http://security:8080/auth
  realm: contractAnalyzer
  resource: contract-analyzer-backend
  public-client: true
  ssl-required: external
#  use-resource-role-mappings: true
  confidential-port: 0