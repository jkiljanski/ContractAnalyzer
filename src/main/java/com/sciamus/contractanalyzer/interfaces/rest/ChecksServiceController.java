package com.sciamus.contractanalyzer.interfaces.rest;

import com.sciamus.contractanalyzer.application.CheckReportDTO;
import com.sciamus.contractanalyzer.application.ContractChecksFacade;
import com.sciamus.contractanalyzer.domain.checks.exception.CheckNotFoundException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import javax.annotation.security.RolesAllowed;
import java.net.MalformedURLException;

@RestController
public class ChecksServiceController {

    private final ContractChecksFacade contractChecksFacade;


    @Autowired
    public ChecksServiceController(ContractChecksFacade contractChecksFacade) {
        this.contractChecksFacade = contractChecksFacade;
    }

    @RolesAllowed("writer")
    @PostMapping("/checks/{name}/run")
    @ResponseBody
    public CheckReportDTO runAndGetReportWithId(
            @PathVariable("name") String name, @RequestParam(name = "url") String url) throws MalformedURLException {

        return contractChecksFacade.runAndGetSavedReportWithId(name, url);

    }

    @RolesAllowed("writer")
    @PostMapping("/checks/{name}/autorun")
    @ResponseBody
    public CheckReportDTO autorunReport(
            @PathVariable("name") String name, @RequestParam(name = "url") String url) throws MalformedURLException {

        return contractChecksFacade.runAndGetSavedAutogeneratedReportWithId(name, url);
    }



    //REFACTORME
    @ExceptionHandler(CheckNotFoundException.class)
    @ResponseStatus(HttpStatus.NOT_FOUND)
    public ResponseEntity<String> handleNoSuchElementFoundException(
            CheckNotFoundException exception
    ) {
        return ResponseEntity
                .status(HttpStatus.NOT_FOUND)
                .body(exception.getMessage());
    }

}
