package com.sciamus.contractanalyzer.application;

import com.sciamus.contractanalyzer.domain.checks.rest.CheckRepository;
import com.sciamus.contractanalyzer.domain.checks.rest.RestContractCheck;
import com.sciamus.contractanalyzer.domain.checks.rest.reportcheck.CurrentUserService;
import com.sciamus.contractanalyzer.domain.reporting.checks.CheckReport;
import com.sciamus.contractanalyzer.domain.reporting.checks.CheckReportBuilder;
import com.sciamus.contractanalyzer.domain.reporting.checks.ReportService;
import com.sciamus.contractanalyzer.application.mapper.CheckReportMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.net.MalformedURLException;
import java.net.URL;

@Service
public class ContractChecksService {


    private final CheckRepository checkRepository;
    private final ReportService reportService;
    private final CheckReportMapper checkReportMapper;
    private final CurrentUserService currentUserService;

    @Autowired
    public ContractChecksService(CheckRepository checkRepository, ReportService reportService, CheckReportMapper checkReportMapper, CurrentUserService currentUserService) {
        this.checkRepository = checkRepository;
        this.reportService = reportService;
        this.checkReportMapper = checkReportMapper;
        this.currentUserService = currentUserService;
    }

    public CheckReportDTO runAndGetSavedReportWithId(String name, String url) throws MalformedURLException {

        CheckReport toSave = runCheck(name, new URL(url));
        // TODO: czy nie trzeba zwalidować czy się zachował?
        reportService.addReportToRepository(toSave);
        return checkReportMapper.mapToDTO(toSave);

    }

    public CheckReportDTO runAndGetSavedAutogeneratedReportWithId(String name, String url) throws MalformedURLException {

        CheckReport toSave = runCheck(name, new URL(url)).addAutogenerated();
        reportService.addReportToRepository(toSave);

        return checkReportMapper.mapToDTO(toSave);

    }

    public CheckReport runCheck (String name, URL url) {
        System.out.println("check was run");
        RestContractCheck restContractCheck = checkRepository.findContractCheck(name);
        return restContractCheck.run(url, new CheckReportBuilder().setUserName(currentUserService.obtainUserName()));
    }

}
