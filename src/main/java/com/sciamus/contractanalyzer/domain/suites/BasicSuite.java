package com.sciamus.contractanalyzer.domain.suites;

import com.sciamus.contractanalyzer.application.CheckReportDTO;
import com.sciamus.contractanalyzer.application.ContractChecksService;
import com.sciamus.contractanalyzer.application.mapper.CheckReportMapper;
import com.sciamus.contractanalyzer.domain.checks.rest.CheckRepository;
import com.sciamus.contractanalyzer.domain.reporting.checks.CheckReport;
import com.sciamus.contractanalyzer.domain.reporting.suites.SuiteReport;
import io.vavr.collection.List;
import io.vavr.control.Try;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.net.URL;

public class BasicSuite extends CheckSuite {

    private final String NAME = "Basic Suite";

    private final String DESCRIPTION = "Runs 3 first checks of the system";

    @Autowired
    private ContractChecksService contractChecksService;

    @Autowired
    private CheckRepository checkRepository;

    @Autowired
    private CheckReportMapper checkReportMapper;

    public BasicSuite() {
        super();
    }

    public String getName() {
        return NAME;
    }

    @Override
    public SuiteReport run(URL url) {


        List<CheckReportDTO> checkReportDTOS = List.ofAll(checkRepository.getAllChecks().stream())
                .take(3)
                .peek(System.out::println)
                .map(s -> Try.of(()-> contractChecksService
                        .runAndGetSavedAutogeneratedReportWithId(s, urlToStringTransform(url)))
                        .getOrElseThrow(throwable -> new RuntimeException(throwable)))
                .collect(List.collector());


        List<CheckReport> checkReports = checkReportDTOS
                .toStream()
                .map(checkReportDTO -> checkReportMapper.mapFromDTO(checkReportDTO))
                .collect(List.collector());

        SuiteReport suiteReport = new SuiteReport(checkReports.toJavaList());
        return suiteReport;

    }
    private String urlToStringTransform(URL url)  {
        return String.valueOf(url);
    }

}